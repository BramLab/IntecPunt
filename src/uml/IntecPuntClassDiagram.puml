@startuml
Package "Models" {
class Book {
  - title: String
  - author: String
  - publicationYear: int
  - ISBN: String
  - availableCopies: int
}

class Member {
  - name: String
  - age: int
  - memberId: Long
  - email: String
}

class Loan {
  - loanID String
  - loanDate: Date
  - dueDate : Date
  - returnDate: Date
  - status : Enum
  - memberId : Long
  - bookId : Long
  }
}

Package "Service" {

class MemberService {
  - MemberRepository : membeRepository
  + addMember(Member)
  + removeMember(Long)
  + listMembers()

  }
class BookService {
  - BookRepository : bookRepository
  + addBook(book: Book)
  + removeBook(book: Book)
  + listBook list()
  + searchBook(String)
  }
class LoanService {
  - LoanRepository : loanRepository
  + loanBook(Long mId, Long bId)
  + returnBook(Long loanId)
  +calculteFine(Long loanId)
  }
}

Package "Repository" {
class LoanRepository {
  + save(Loan)
  + findById(Long)
  + findActiveByMember(Long)
  + findAll()

  }
class BookRepository {
 + save(Book)
 + findById(Long)
 + findAll()
 + findByTitle(String)
}
class MemberRepository {
- members: List<Member>
  + save(Member)
  + deleteById(Long)
  + findById(Long)
  + findAll()

}
}

class LibrarySystemMain {

}

BookService --> BookRepository : implements
MemberService --> MemberRepository : implements
LoanService --> LoanRepository : implements
BookRepository --> Book : manages >
MemberRepository --> Member : manages >
LoanRepository --> Loan : manages >
LoanService <-- BookService : relates to >
LoanService <-- MemberService : borrowed by >



@enduml